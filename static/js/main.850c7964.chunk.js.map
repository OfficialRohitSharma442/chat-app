{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageFrom","props","useState","value","setValue","chatId","creds","handelSubmmit","event","preventDefault","text","trim","length","sendMessage","Fragment","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","renderMessages","keys","Object","key","lastMessageKey","width","title","height","MessageForm","LoginForm","setUserName","password","setPassword","error","setError","handleSubmit","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","userSecret","projectID","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.850c7964.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { sendMessage, isTyping } from \"react-chat-engine\";\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\nconst MessageFrom = (props) => {\n  const [value, setValue] = useState(\"\");\n  const { chatId, creds } = props;\n  const handelSubmmit = (event) => {\n    event.preventDefault();\n    const text = value.trim();\n    if (text.length > 0) sendMessage(creds, chatId, { text });\n    setValue(\"\");\n  };\n  const handelChange = (event) => {\n    setValue(event.target.value);\n    isTyping(props, chatId);\n  };\n  const handleUpload = (event) => {\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\n  };\n  return (\n    <React.Fragment>\n      <form className=\"message-form\" onSubmit={handelSubmmit}>\n        <input\n          className=\"message-input\"\n          placeholder=\" Send a Message ...\"\n          value={value}\n          onChange={handelChange}\n          onSubmit={handelSubmmit}\n        />\n        <label htmlFor=\"upload-button\">\n          <span>\n            <PictureOutlined className=\"picture-icon\" />\n          </span>\n        </label>\n        <input\n          type=\"file\"\n          multiple={false}\n          id=\"upload-button\"\n          style={{ display: \"none\" }}\n          onChange={handleUpload}\n        />\n\n        <button type=\"submit\" className=\"send-button\">\n          <SendOutlined className=\"send-icon\"\n          \n          />\n        </button>\n      </form>\n    </React.Fragment>\n  );\n};\nexport default MessageFrom;\n","import React from \"react\";\nconst MyMessage = ({ message }) => {\n  if (message?.attachments?.length > 0) {\n    return (\n      <img\n        src={message.attachments[0].file}\n        alt=\"message-attachments\"\n        className=\"message-image\"\n        style={{ float: \"right\" }}\n      />\n    );\n  }\n  return (\n    <>\n      <div\n        className=\"message\"\n        style={{\n          float: \"right\",\n          marginRight: \"18px\",\n          backgroundColor: \"#1d6f70\",\n        }}\n      >\n        {message.text}\n      </div>\n    </>\n  );\n};\nexport default MyMessage;\n","import React from \"react\";\nconst TheirMessage = ({ lastMessage, message }) => {\n  const isFirstMessageByUser =!lastMessage||lastMessage.sender.username=== message.sender.username;\n  return (\n    <>\n      <div className=\"message-row\">\n        {isFirstMessageByUser && (\n          <div\n            className=\"message-avatar\"\n            style={{ backgroundImage: `url{${message?.sender?.avatar}}` }}\n          />\n        )}\n        {message?.attachments?.length > 0 ? (\n          <img\n            src={message.attachments[0].file}\n            alt=\"message-attachments\"\n            className=\"message-image\"\n            style={{ marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}\n          />\n        ) : (\n          <div\n            className=\"message\"\n            style={{\n              float: \"left\",\n              backgroundColor: \"#3b4044\",\n              marginLeft: isFirstMessageByUser ? \"0px\" : \"8px\",\n            }}\n          >\n            {message.text}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default TheirMessage;\n","import React from \"react\";\n// import { render } from \"react-dom\";\nimport MessageForm from \"./MessageForm\";\nimport MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\nconst ChatFeed = (props) => {\n  // console.log(props);\n  const { chats, activeChat, userName, messages } = props;\n  const chat = chats && chats[activeChat];\n  // console.log(chat, userName, messages);\n  const renderReadReceipts = (message, isMyMessage) => {\n    return chat.people.map((person, index) => {\n      return (\n        person.last_read === message.id && (\n          <div\n            key={`read_${index}`}\n            className=\"read-receipt\"\n            style={{\n              float: isMyMessage ? \"right\" : \"left\",\n              backgroundImage: `url{${person?.person?.avatar}}`,\n            }}\n          />\n        )\n      );\n    });\n  };\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return (\n        <div key={`msg_${index} `} style={{ width: \"100%\" }}>\n          <div className=\"message-block\">\n            {isMyMessage ? (\n              <MyMessage message={message} />\n            ) : (\n              <TheirMessage\n                message={message}\n                lastMessage={message[lastMessageKey]}\n              />\n            )}\n          </div>\n          <div\n            className=\"read-receipts\"\n            style={{\n              marginRight: isMyMessage ? \"18px\" : \"0px\",\n              marginLeft: isMyMessage ? \"0px\" : \"68px\",\n            }}\n          >\n            {renderReadReceipts(message, isMyMessage)}\n          </div>\n        </div>\n      );\n    });\n  };\n  renderMessages();\n  // console.log(chat);\n  if (!chat) return \"Loding...\";\n\n  return (\n    <React.Fragment>\n      <div className=\"chat-feed\">\n        <div className=\"chat-title-container\">\n          <div className=\"chat-title\">{chat.title}</div>\n          <div className=\"chat-subtitle\">\n            {chat.people.map((person) => `${person.person.username}`)}\n          </div>\n        </div>\n        {renderMessages()}\n        <div style={{ height: \"100px\" }} />\n        <div className=\"message-form-container\">\n          <MessageForm {...props} chatId={activeChat} />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default ChatFeed;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst LoginForm = () => {\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const authObject = {\n      \"Project-ID\": 'b141dc3f-526b-46b2-a2db-1587552240d9',\n      \"User-Name\": username,\n      \"User-Secret\": password,\n    };\n    try {\n      await axios.get(\"https://api.chatengine.io/chats\", {\n        headers: authObject,\n      });\n      localStorage.setItem(\"username\", username);\n      localStorage.setItem(\"password\", password);\n      window.location.reload();\n    } catch (error) {\n      setError(\"Ooops, incorrect credentials \");\n    }\n  };\n  return (\n    <div className=\"wrapper\">\n      <div className=\"form\">\n        <h1 className=\"title\">\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              value={username}\n              onChange={(event) => setUserName(event.target.value)}\n              className=\"input\"\n              placeholder=\"UserName\"\n              required\n            />\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n              className=\"input\"\n              placeholder=\"Password\"\n              required\n            />\n            <div align=\"center\">\n              <button type=\"submit\" className=\"button\">\n                <span>Start Chatting</span>\n              </button>\n            </div>\n            <h2 className=\"error\">{error}</h2>\n          </form>\n        </h1>\n      </div>\n    </div>\n  );\n};\nexport default LoginForm;\n","import React from \"react\";\nimport \"./App.css\";\nimport ChatFeed from \"./components/ChatFeed\";\nimport LoginForm from \"./components/LoginForm\";\nimport { ChatEngine } from \"react-chat-engine\";\n\nexport function App() {\n  if (!localStorage.getItem(\"username\")) return <LoginForm />;\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      userName={localStorage.getItem(\"username\")}\n      userSecret={localStorage.getItem(\"password\")}\n      projectID=\"b141dc3f-526b-46b2-a2db-1587552240d9\"\n      renderChatFeed={(chatAppProps) => {\n        return <ChatFeed {...chatAppProps} />;\n      }}\n    />\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}